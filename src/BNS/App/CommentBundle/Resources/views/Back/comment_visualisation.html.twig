{% trans_default_domain "COMMENT" %}

{% if comments|length > 0 %}
	<script type="text/javascript">
		$(function ()
		{
			var commentStatuses = ['pending_validation', 'validated', 'refused'];
				
			// Buttons moderation process
			$('body').on('click', '.comment-moderation a.moderation-button', function (e)
			{
				var $this = $(e.currentTarget),
					$row = $this.parent().parent().parent(),
					id = $row.attr('id').split('-'),
					$loader = $row.find('.loader');

				$loader.fadeIn('fast');

				id = id[1];
				$.ajax({
					url: '{{ path('comment_manager_status_update_visualisation') }}',
					type: 'POST',
					dataType: 'json',
					data: {
						'namespace': '{{ namespace }}',
						'status': $this.data('filter-status'),
						'id': id,
						'editRoute': '{{ editRoute }}'
					},
					success: function (data)
					{
						// Update comment status class
						for (i in commentStatuses) {
							$row.removeClass('status-' + commentStatuses[i]);
						}
						$row.addClass('status-' + data.classe);
						
						// Update indicators
						if (typeof updateIndicators == 'function') {
							updateIndicators();
						}
						
						$moderation = $row.find('.comment-moderation');
						$moderation.fadeOut('fast', function ()
						{
							$(this).html(data.moderation);
							$row.find('.vertical-separator').removeClass().addClass('vertical-separator').addClass(data.classe);
							$(this).fadeIn('fast');
						});
					}
				}).done(function ()
				{
					$loader.fadeOut('fast');
				});

				return false;
			});
			
			if ($('.comment-statuses-filter').length > 0) {
				$('.comment-statuses-filter').css('display', 'block');
				
				var updateIndicators = function ()
				{
					$.each($('.comment-statuses-filter a'), function (i, item) {
						var $item = $(item),
							status = $item.data('filter-status').toLowerCase();

						if (status == 'all') {
							$item.find('span.indicator').text('(' + $('.comments-list-container .comments-list h3 .indicator').text() + ')');
						}
						else {
							$item.find('span.indicator').text('(' + $('.comments-list-container .comments-list .status-' + status).length + ')');
						}
					});
				};

				// First indicators update				
				updateIndicators();

				$('.comment-statuses-filter a').click(function (e)
				{
					var $this = $(e.currentTarget),
						status = $this.data('filter-status').toLowerCase();

					if ($this.hasClass('active')) {
						return false;
					}

					$('.comment-statuses-filter a').removeClass('active');
					$this.addClass('active');

					// Open all comments
					if (status == 'all') {
						$('.no-item.comment-filter').slideUp('fast');
						for (i in commentStatuses) {
							$('.comments-list-container .comments-list .status-' + commentStatuses[i]).slideDown('slow');
						}

						return false;
					}

					// Close process
					for (i in commentStatuses) {
						$('.comments-list-container .comments-list .status-' + commentStatuses[i]).fadeOut('fast');
					}

					// Open process
					var $comments = $('.comments-list-container .comments-list .status-' + status);
					if ($comments.length > 0) {
						$('.no-item.comment-filter').slideUp('fast');
						$('.comments-list-container .comments-list .status-' + status).slideDown('slow');
					}
					else {
						$('.no-item.comment-filter').slideDown('fast');
					}

					return false;
				});
			}
		});
	</script>

	<div class="comments-list-container">
		<div class="comments-list">
			<h3>
                    {{ 'TITLE_NUMBER_COMMENT'|transchoice(comments|length, {'%commentsLength%': comments|length}) |desc('[0,1] <span class="indicator">%commentsLength%</span> commentaire | ]1,Inf[ <span class="indicator">%commentsLength%</span> commentaires') |raw }}
            </h3>
			{% for comment in comments %}
				{% include 'BNSAppCommentBundle:Back:comment_row.html.twig' %}
			{% endfor %}
			<div class="no-item comment-filter">
				<p>{{ 'NO_COMMENT_FOR_THIS_FILTER'|trans |desc('Il n\'y a aucun commentaire pour le filtre sélectionné.') }}</p>
			</div>
		</div>
	</div>
{% endif %}